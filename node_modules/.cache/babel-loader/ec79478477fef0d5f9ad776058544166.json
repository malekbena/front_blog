{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\benal\\\\Desktop\\\\code\\\\app_agp\\\\app_agp\\\\src\\\\Front\\\\src\\\\Screens\\\\Post.js\";\nimport React, { Component } from 'react';\nimport { Container, Col } from 'reactstrap';\nimport Layout from '../Containers/Layout';\nimport { AppConsumer, AppContext } from '../Context/AppContext';\n\nclass Post extends Component {\n  componentDidMount() {\n    let context = this.context;\n\n    if (context.posts.length) {\n      context.findPost(this.props.match.params.slug);\n    }\n  }\n\n  render() {\n    return React.createElement(AppConsumer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18\n      },\n      __self: this\n    }, ({\n      waiting,\n      selectedPost\n    }) => {\n      return React.createElement(Layout, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22\n        },\n        __self: this\n      }, React.createElement(Container, {\n        fluid: true,\n        className: \"p-0 postContainer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23\n        },\n        __self: this\n      }, React.createElement(Col, {\n        lg: 9,\n        className: \"mx-auto align-items-center flex-column d-flex\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24\n        },\n        __self: this\n      }, selectedPost !== null && React.createElement(React.Fragment, null, React.createElement(Col, {\n        className: \"m-3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        className: \"text-center blueCustom text-uppercase\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        },\n        __self: this\n      }, \" \", React.createElement(\"strong\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        },\n        __self: this\n      }, \" \", selectedPost.name), \" \")), React.createElement(Col, {\n        className: \"justify-content-center d-flex col-12 m-3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        className: \"col-6\",\n        src: selectedPost.full_image,\n        alt: \"Cover\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      })), React.createElement(\"p\", {\n        className: \"legend\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }, \" \", selectedPost.legend, \" \"), React.createElement(Col, {\n        className: \"justify-content-center d-flex col-12 m-3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        dangerouslySetInnerHTML: {\n          __html: selectedPost.description\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }), selectedPost.rating != null && React.createElement(\"img\", {\n        src: \"Img/rating/\".concat(selectedPost.rating, \".svg\"),\n        alt: \"rating\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }))))));\n    });\n  }\n\n}\n\nPost.contextType = AppContext;\nexport default Post;","map":{"version":3,"sources":["C:\\Users\\benal\\Desktop\\code\\app_agp\\app_agp\\src\\Front\\src\\Screens\\Post.js"],"names":["React","Component","Container","Col","Layout","AppConsumer","AppContext","Post","componentDidMount","context","posts","length","findPost","props","match","params","slug","render","waiting","selectedPost","name","full_image","legend","__html","description","rating","contextType"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,SAAT,EAAoBC,GAApB,QAA+B,YAA/B;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,SAASC,WAAT,EAAsBC,UAAtB,QAAwC,uBAAxC;;AAGA,MAAMC,IAAN,SAAmBN,SAAnB,CAA6B;AAEzBO,EAAAA,iBAAiB,GAAG;AAChB,QAAIC,OAAO,GAAG,KAAKA,OAAnB;;AACA,QAAIA,OAAO,CAACC,KAAR,CAAcC,MAAlB,EAA0B;AACtBF,MAAAA,OAAO,CAACG,QAAR,CAAiB,KAAKC,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBC,IAAzC;AACH;AACJ;;AAEDC,EAAAA,MAAM,GAAG;AACL,WACI,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEQ,CAAC;AAAEC,MAAAA,OAAF;AAAWC,MAAAA;AAAX,KAAD,KAA+B;AAC3B,aACI,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,SAAD;AAAW,QAAA,KAAK,MAAhB;AAAiB,QAAA,SAAS,EAAC,mBAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,GAAD;AAAK,QAAA,EAAE,EAAE,CAAT;AAAY,QAAA,SAAS,EAAC,+CAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEQA,YAAY,KAAK,IAAjB,IACA,0CACI,oBAAC,GAAD;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAI,QAAA,SAAS,EAAC,uCAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAuD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAUA,YAAY,CAACC,IAAvB,CAAvD,MADJ,CADJ,EAIQ,oBAAC,GAAD;AAAK,QAAA,SAAS,EAAC,0CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,SAAS,EAAC,OAAf;AAAuB,QAAA,GAAG,EAAED,YAAY,CAACE,UAAzC;AAAqD,QAAA,GAAG,EAAC,OAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CAJR,EAOY;AAAG,QAAA,SAAS,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAyBF,YAAY,CAACG,MAAtC,MAPZ,EAQQ,oBAAC,GAAD;AAAK,QAAA,SAAS,EAAC,0CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEI;AAAK,QAAA,uBAAuB,EAAE;AAAEC,UAAAA,MAAM,EAAEJ,YAAY,CAACK;AAAvB,SAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,EAIQL,YAAY,CAACM,MAAb,IAAuB,IAAvB,IACA;AAAK,QAAA,GAAG,uBAAkBN,YAAY,CAACM,MAA/B,SAAR;AAAuD,QAAA,GAAG,EAAC,QAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QALR,CARR,CAHR,CADJ,CADJ,CADJ;AA8BH,KAjCT,CADJ;AAsCH;;AAhDwB;;AAmD7BlB,IAAI,CAACmB,WAAL,GAAmBpB,UAAnB;AACA,eAAeC,IAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport { Container, Col } from 'reactstrap';\r\nimport Layout from '../Containers/Layout'\r\nimport { AppConsumer, AppContext } from '../Context/AppContext';\r\n\r\n\r\nclass Post extends Component {\r\n\r\n    componentDidMount() {\r\n        let context = this.context\r\n        if (context.posts.length) {\r\n            context.findPost(this.props.match.params.slug)\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <AppConsumer>\r\n                {\r\n                    ({ waiting, selectedPost }) => {\r\n                        return (\r\n                            <Layout>\r\n                                <Container fluid className=\"p-0 postContainer\">\r\n                                    <Col lg={9} className=\"mx-auto align-items-center flex-column d-flex\" >\r\n                                        {\r\n                                            selectedPost !== null &&\r\n                                            <>\r\n                                                <Col className=\"m-3\">\r\n                                                    <h2 className=\"text-center blueCustom text-uppercase\"> <strong> {selectedPost.name}</strong> </h2>\r\n                                                </Col>\r\n                                                    <Col className=\"justify-content-center d-flex col-12 m-3\">\r\n                                                        <img className=\"col-6\" src={selectedPost.full_image} alt=\"Cover\" />\r\n                                                    </Col>\r\n                                                        <p className=\"legend\"> { selectedPost.legend } </p>\r\n                                                    <Col className=\"justify-content-center d-flex col-12 m-3\">\r\n                                                    \r\n                                                        <div dangerouslySetInnerHTML={{ __html: selectedPost.description }} />\r\n                                                        {\r\n                                                            selectedPost.rating != null &&\r\n                                                            <img src={ `Img/rating/${ selectedPost.rating }.svg` } alt=\"rating\" />\r\n                                                            \r\n                                                        }\r\n                                                        \r\n                                                    </Col>\r\n                                            </>\r\n                                        }\r\n                                    </Col>\r\n                                </Container>\r\n                            </Layout>\r\n                        )\r\n                    }\r\n                }\r\n            </AppConsumer>\r\n        );\r\n    }\r\n}\r\n\r\nPost.contextType = AppContext\r\nexport default Post;"]},"metadata":{},"sourceType":"module"}