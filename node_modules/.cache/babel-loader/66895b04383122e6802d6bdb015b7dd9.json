{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\benal\\\\Desktop\\\\code\\\\app_agp\\\\app_agp\\\\src\\\\Front\\\\src\\\\Screens\\\\Joinus.js\";\nimport React, { Component } from 'react';\nimport { Button, Form, FormGroup, Label, Input, FormText, Container, Col } from 'reactstrap';\nimport Layout from '../Containers/Layout';\nimport { AppConsumer, AppContext } from '../Context/AppContext';\n\nclass Joinus extends Component {\n  handleSubmit(event) {\n    event.preventDefault();\n    const _this$props$env = this.props.env,\n          receiverEmail = _this$props$env.REACT_APP_EMAILJS_RECEIVER,\n          template = _this$props$env.REACT_APP_EMAILJS_TEMPLATEID;\n    this.sendFeedback(template, this.props.senderEmail, receiverEmail, this.state.feedback);\n    this.setState({\n      formSubmitted: true\n    });\n  }\n\n  sendFeedback(templateId, senderEmail, receiverEmail, feedback) {\n    window.emailjs.send('mailgun', templateId, {\n      senderEmail,\n      receiverEmail,\n      feedback\n    }).then(res => {\n      this.setState({\n        formEmailSent: true\n      });\n    }) // Handle errors here however you like, or use a React error boundary\n    .catch(err => console.error('Failed to send feedback. Error: ', err));\n  }\n\n  render() {\n    return React.createElement(AppConsumer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, ({\n      waiting\n    }) => {\n      return React.createElement(Layout, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, React.createElement(Container, {\n        fluid: true,\n        className: \"p-0 whiteText mt-3 d-flex flex-column align-items-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, \" Nous rejoindre \"), React.createElement(Col, {\n        className: \"col-9 p-3 m-3 shadowCustom\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        className: \"feedback-form\",\n        onSubmit: handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, \"Your Feedback\"), React.createElement(\"textarea\", {\n        className: \"text-input\",\n        id: \"feedback-entry\",\n        name: \"feedback-entry\",\n        onChange: handleChange,\n        placeholder: \"Enter your feedback here\",\n        required: true,\n        value: feedback,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"btn-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        className: \"btn btn--cancel\",\n        onClick: handleClose,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, \"Cancel\"), React.createElement(\"input\", {\n        type: \"submit\",\n        value: \"Submit\",\n        className: \"btn btn--submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }))))));\n    });\n  }\n\n}\n\nJoinus.contextType = AppContext;\nexport default Joinus;","map":{"version":3,"sources":["C:\\Users\\benal\\Desktop\\code\\app_agp\\app_agp\\src\\Front\\src\\Screens\\Joinus.js"],"names":["React","Component","Button","Form","FormGroup","Label","Input","FormText","Container","Col","Layout","AppConsumer","AppContext","Joinus","handleSubmit","event","preventDefault","props","env","receiverEmail","REACT_APP_EMAILJS_RECEIVER","template","REACT_APP_EMAILJS_TEMPLATEID","sendFeedback","senderEmail","state","feedback","setState","formSubmitted","templateId","window","emailjs","send","then","res","formEmailSent","catch","err","console","error","render","waiting","handleChange","handleClose","contextType"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { Button, Form, FormGroup, Label, Input, FormText, Container, Col } from 'reactstrap';\r\nimport Layout from '../Containers/Layout';\r\n\r\n\r\n\r\nimport { AppConsumer, AppContext } from '../Context/AppContext';\r\n\r\nclass Joinus extends Component {\r\n    handleSubmit(event) {\r\n        event.preventDefault()\r\n\r\n        const {\r\n            REACT_APP_EMAILJS_RECEIVER: receiverEmail,\r\n            REACT_APP_EMAILJS_TEMPLATEID: template\r\n        } = this.props.env\r\n\r\n        this.sendFeedback(\r\n            template,\r\n            this.props.senderEmail,\r\n            receiverEmail,\r\n            this.state.feedback)\r\n\r\n        this.setState({\r\n            formSubmitted: true\r\n        })\r\n    }\r\n\r\n    sendFeedback(templateId, senderEmail, receiverEmail, feedback) {\r\n        window.emailjs.send(\r\n            'mailgun',\r\n            templateId,\r\n            {\r\n                senderEmail,\r\n                receiverEmail,\r\n                feedback\r\n            })\r\n            .then(res => {\r\n                this.setState({ formEmailSent: true })\r\n            })\r\n            // Handle errors here however you like, or use a React error boundary\r\n            .catch(err => console.error('Failed to send feedback. Error: ', err))\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <AppConsumer>\r\n                {\r\n                    ({ waiting }) => {\r\n\r\n                        return (\r\n                            <Layout>\r\n                                <Container fluid className=\"p-0 whiteText mt-3 d-flex flex-column align-items-center\">\r\n                                    <h1> Nous rejoindre </h1>\r\n                                    <Col className=\"col-9 p-3 m-3 shadowCustom\">\r\n                                        <form className=\"feedback-form\" onSubmit={handleSubmit}>\r\n                                            <h1>Your Feedback</h1>\r\n                                            <textarea\r\n                                                className=\"text-input\"\r\n                                                id=\"feedback-entry\"\r\n                                                name=\"feedback-entry\"\r\n                                                onChange={handleChange}\r\n                                                placeholder=\"Enter your feedback here\"\r\n                                                required\r\n                                                value={feedback}\r\n                                            />\r\n                                            <div className=\"btn-group\">\r\n                                                <button className=\"btn btn--cancel\" onClick={handleClose}>\r\n                                                    Cancel\r\n                                                </button>\r\n                                                <input type=\"submit\" value=\"Submit\" className=\"btn btn--submit\" />\r\n                                            </div>\r\n                                        </form>\r\n                                    </Col>\r\n\r\n                                </Container>\r\n                            </Layout>\r\n                        )\r\n                    }\r\n                }\r\n            </AppConsumer>\r\n        );\r\n    }\r\n}\r\n\r\nJoinus.contextType = AppContext\r\nexport default Joinus;"]},"metadata":{},"sourceType":"module"}