{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\benal\\\\Desktop\\\\code\\\\app_agp\\\\app_agp\\\\src\\\\Front\\\\src\\\\Context\\\\AppContext.js\";\nimport React, { Component } from 'react';\nimport Axios from 'axios';\nimport { domain } from '../Helpers/config';\nconst AppContext = React.createContext();\n\nclass AppProvider extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      posts: {},\n      teams: {},\n      partners: {},\n      selectedTeam: {},\n      selectedPost: {},\n      selectedPartner: {},\n      selectStreamers: {},\n      slides: {},\n      waiting: true\n    };\n\n    this.getSlides = async () => {\n      await Axios.get(\"\".concat(domain, \"/slides.json\")).then(resp => {\n        this.setState({\n          slides: resp.data.slides\n        });\n      }).catch(err => {\n        throw err;\n      });\n    };\n\n    this.getSettings = async () => {\n      await Axios.post(\"\".concat(domain, \"/settings.json\")).then(resp => {\n        this.setState({\n          settings: resp.data.settings\n        });\n      }).catch(err => {\n        throw err;\n      });\n    };\n\n    this.getTeam = async () => {\n      await Axios.get(\"\".concat(domain, \"/teams.json\")).then(resp => {\n        this.setState({\n          teams: resp.data.teams\n        });\n      }).catch(err => {\n        throw err;\n      });\n    };\n\n    this.getPartners = async () => {\n      await Axios.get(\"\".concat(domain, \"/partners.json\")).then(resp => {\n        this.setState({\n          partners: resp.data.partners\n        });\n      }).catch(err => {\n        throw err;\n      });\n    };\n\n    this.getPosts = async () => {\n      await Axios.get(\"\".concat(domain, \"/posts.json\")).then(resp => {\n        this.setState({\n          posts: resp.data.posts\n        });\n      }).catch(err => {\n        throw err;\n      });\n    };\n\n    this.sendEmail = () => {\n      Axios.post(\"\".concat(domain, \"/sendEmail.json\"), {\n        message: \"taVariableMessageIci\",\n        from: \"taVariableFromIci\"\n      }).then(function (response) {\n        console.log(response);\n      }).catch(function (error) {\n        console.log(error);\n      });\n    };\n\n    this.handleChangeTeam = async (id, teams) => {\n      let selectedTeam = teams.filter(team => team.id === id);\n      this.setState({\n        selectedTeam: selectedTeam[0]\n      });\n    };\n\n    this.findPost = async slug => {\n      let selectedPost = this.state.posts.find(post => post.slug === slug);\n      this.setState({\n        selectedPost: selectedPost\n      });\n    };\n\n    this.findPartner = async slug => {\n      let selectedPartner = this.state.partners.find(partner => partner.slug === slug);\n      this.setState({\n        selectedPartner: selectedPartner\n      });\n    };\n\n    this.findStreamers = async (slug, teams) => {\n      let selectStreamers = teams.filter(team => team.slug === slug);\n      await this.setState({\n        selectStreamers: selectStreamers\n      });\n    };\n\n    this.findSetting = key => {\n      let settings = this.state.settings;\n      let setting = settings.filter(setting => setting.meta_key === key);\n      return setting[0];\n    };\n  }\n\n  componentDidMount() {\n    this.getSlides().then(() => {\n      this.getSettings().then(() => {\n        this.getPosts().then(() => {\n          this.getTeam().then(() => {\n            this.getPartners().then(() => {\n              this.handleChangeTeam(this.state.teams[0].id, this.state.teams).then(() => {\n                this.findStreamers('streamer', this.state.teams).then(() => {\n                  this.setState({\n                    waiting: false\n                  });\n                });\n              });\n            });\n          });\n        });\n      });\n    });\n  }\n\n  render() {\n    return React.createElement(AppContext.Provider, {\n      value: {\n        handleChangeTeam: this.handleChangeTeam,\n        findPost: this.findPost,\n        findPartner: this.findPartner,\n        findStreamers: this.findStreamers,\n        teams: this.state.teams,\n        posts: this.state.posts,\n        partners: this.state.partners,\n        slides: this.state.slides,\n        selectedTeam: this.state.selectedTeam,\n        selectedPost: this.state.selectedPost,\n        selectedPartner: this.state.selectedPartner,\n        selectStreamers: this.state.selectStreamers,\n        findSetting: this.findSetting,\n        waiting: this.state.waiting\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154\n      },\n      __self: this\n    }, this.props.children);\n  }\n\n}\n\nconst AppConsumer = AppContext.Consumer;\nexport { AppProvider, AppConsumer, AppContext };","map":{"version":3,"sources":["C:\\Users\\benal\\Desktop\\code\\app_agp\\app_agp\\src\\Front\\src\\Context\\AppContext.js"],"names":["React","Component","Axios","domain","AppContext","createContext","AppProvider","state","posts","teams","partners","selectedTeam","selectedPost","selectedPartner","selectStreamers","slides","waiting","getSlides","get","then","resp","setState","data","catch","err","getSettings","post","settings","getTeam","getPartners","getPosts","sendEmail","message","from","response","console","log","error","handleChangeTeam","id","filter","team","findPost","slug","find","findPartner","partner","findStreamers","findSetting","key","setting","meta_key","componentDidMount","render","props","children","AppConsumer","Consumer"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport Axios from 'axios';\r\nimport { domain } from '../Helpers/config';\r\n\r\nconst AppContext = React.createContext()\r\n\r\nclass AppProvider extends Component {\r\n\tstate = {\r\n\t\tposts: {},\r\n\t\tteams: {},\r\n\t\tpartners: {},\r\n\t\tselectedTeam: {},\r\n\t\tselectedPost: {},\r\n\t\tselectedPartner: {},\r\n\t\tselectStreamers: {},\r\n\t\tslides: {},\r\n\t\twaiting: true\r\n\t}\r\n\r\n\tcomponentDidMount() {\r\n\t\tthis.getSlides().then(() => {\r\n\t\t\tthis.getSettings().then(() => {\r\n\t\t\t\tthis.getPosts().then(() => {\r\n\t\t\t\t\tthis.getTeam().then(() => {\r\n\t\t\t\t\t\tthis.getPartners().then(() => {\r\n\t\t\t\t\t\t\tthis.handleChangeTeam(this.state.teams[0].id, this.state.teams).then(() => {\r\n\t\t\t\t\t\t\t\tthis.findStreamers('streamer', this.state.teams).then(() => {\r\n\t\t\t\t\t\t\t\t\tthis.setState({\r\n\t\t\t\t\t\t\t\t\t\twaiting: false\r\n\t\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t})\r\n\t\t\t\t})\r\n\t\t\t})\r\n\t\t})\r\n\t}\r\n\r\n\tgetSlides = async () => {\r\n\t\tawait Axios\r\n\t\t\t.get(`${domain}/slides.json`)\r\n\t\t\t.then(resp => {\r\n\t\t\t\tthis.setState({\r\n\t\t\t\t\tslides: resp.data.slides,\r\n\t\t\t\t});\r\n\t\t\t})\r\n\t\t\t.catch(err => {\r\n\t\t\t\tthrow err;\r\n\t\t\t});\r\n\t}\r\n\r\n\tgetSettings = async () => {\r\n\t\tawait Axios\r\n\t\t\t.post(`${domain}/settings.json`)\r\n\t\t\t.then(resp => {\r\n\t\t\t\tthis.setState({\r\n\t\t\t\t\tsettings: resp.data.settings,\r\n\t\t\t\t});\r\n\t\t\t})\r\n\t\t\t.catch(err => {\r\n\t\t\t\tthrow err;\r\n\t\t\t});\r\n\t}\r\n\r\n\tgetTeam = async () => {\r\n\t\tawait Axios\r\n\t\t\t.get(`${domain}/teams.json`)\r\n\t\t\t.then(resp => {\r\n\t\t\t\tthis.setState({\r\n\t\t\t\t\tteams: resp.data.teams,\r\n\t\t\t\t});\r\n\t\t\t})\r\n\t\t\t.catch(err => {\r\n\t\t\t\tthrow err;\r\n\t\t\t});\r\n\t}\r\n\r\n\tgetPartners = async () => {\r\n\t\tawait Axios\r\n\t\t\t.get(`${domain}/partners.json`)\r\n\t\t\t.then(resp => {\r\n\t\t\t\tthis.setState({\r\n\t\t\t\t\tpartners: resp.data.partners,\r\n\t\t\t\t});\r\n\t\t\t})\r\n\t\t\t.catch(err => {\r\n\t\t\t\tthrow err;\r\n\t\t\t});\r\n\t}\r\n\r\n\tgetPosts = async () => {\r\n\t\tawait Axios\r\n\t\t\t.get(`${domain}/posts.json`)\r\n\t\t\t.then(resp => {\r\n\t\t\t\tthis.setState({\r\n\t\t\t\t\tposts: resp.data.posts,\r\n\t\t\t\t});\r\n\t\t\t})\r\n\t\t\t.catch(err => {\r\n\t\t\t\tthrow err;\r\n\t\t\t});\r\n\t}\r\n\r\n\tsendEmail = () => {\r\n\t\tAxios.post(`${domain}/sendEmail.json`, {\r\n\t\t\tmessage: \"taVariableMessageIci\",\r\n\t\t\tfrom: \"taVariableFromIci\" \r\n\t\t})\r\n\t\t\t.then(function (response) {\r\n\t\t\t\tconsole.log(response);\r\n\t\t\t})\r\n\t\t\t.catch(function (error) {\r\n\t\t\t\tconsole.log(error);\r\n\t\t\t});\r\n\t\t\t\r\n\t}\r\n\r\n\thandleChangeTeam = async (id, teams) => {\r\n\t\tlet selectedTeam = teams.filter(team => team.id === id)\r\n\t\tthis.setState({\r\n\t\t\tselectedTeam: selectedTeam[0]\r\n\t\t})\r\n\t}\r\n\tfindPost = async (slug) => {\r\n\t\tlet selectedPost = this.state.posts.find(post => post.slug === slug)\r\n\t\tthis.setState({\r\n\t\t\tselectedPost: selectedPost\r\n\t\t})\r\n\t}\r\n\r\n\tfindPartner = async (slug) => {\r\n\t\tlet selectedPartner = this.state.partners.find(partner => partner.slug === slug)\r\n\t\tthis.setState({\r\n\t\t\tselectedPartner: selectedPartner\r\n\t\t})\r\n\t}\r\n\r\n\tfindStreamers = async (slug, teams) => {\r\n\t\tlet selectStreamers = teams.filter(team => team.slug === slug)\r\n\t\tawait this.setState({\r\n\t\t\tselectStreamers: selectStreamers\r\n\t\t})\r\n\t}\r\n\r\n\tfindSetting = (key) => {\r\n\t\tlet {settings} = this.state\r\n\t\tlet setting = settings.filter(setting => setting.meta_key === key)\r\n\t\treturn setting[0]\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<AppContext.Provider\r\n\t\t\t\tvalue={{\r\n\t\t\t\t\thandleChangeTeam: this.handleChangeTeam,\r\n\t\t\t\t\tfindPost: this.findPost,\r\n\t\t\t\t\tfindPartner: this.findPartner,\r\n\t\t\t\t\tfindStreamers: this.findStreamers,\r\n\t\t\t\t\tteams: this.state.teams,\r\n\t\t\t\t\tposts: this.state.posts,\r\n\t\t\t\t\tpartners: this.state.partners,\r\n\t\t\t\t\tslides: this.state.slides,\r\n\t\t\t\t\tselectedTeam: this.state.selectedTeam,\r\n\t\t\t\t\tselectedPost: this.state.selectedPost,\r\n\t\t\t\t\tselectedPartner: this.state.selectedPartner,\r\n\t\t\t\t\tselectStreamers: this.state.selectStreamers,\r\n\t\t\t\t\tfindSetting: this.findSetting,\r\n\t\t\t\t\twaiting: this.state.waiting,\r\n\t\t\t\t}}>\r\n\r\n\r\n\t\t\t\t{this.props.children}\r\n\r\n\t\t\t</AppContext.Provider>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nconst AppConsumer = AppContext.Consumer\r\nexport { AppProvider, AppConsumer, AppContext }"]},"metadata":{},"sourceType":"module"}